//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "sqlite"
  url      = env("SQLITE_FILE")
}

generator client {
  provider = "prisma-client-js"
}

enum OrganType {
  KIDNEY
  LIVER
  LUNG
  HEART
  PANCREAS
  INTESTINES
}

enum BloodType {
  A_POS  @map("A+")
  A_NEG  @map("A-")
  B_POS  @map("B+")
  B_NEG  @map("B-")
  O_POS  @map("O+")
  O_NEG  @map("O-")
  AB_POS @map("AB+")
  AB_NEG @map("AB-")
}

model patients {
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt()
  deactivatedAt   DateTime?
  patientId       String     @id() @default(cuid())
  latitude        Float
  longitude       Float
  firstName       String
  lastName        String
  age             Int
  ssn             String?    @unique()
  bloodType       BloodType
  organsDonated   organs[]   @relation("DonorRelation")
  organsReceived  organs[]   @relation("RecipientRelation")
  transplantNeeds waitlist[] @relation("WaitListRelation")
}

model organs {
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt()
  deactivatedAt DateTime?
  organId       String    @id() @default(cuid())
  donorId       String
  recipientId   String?
  latitude      Float
  longitude     Float
  organType     OrganType
  bloodType     BloodType
  organSize     Int
  donor         patients  @relation("DonorRelation", fields: [donorId], references: [patientId])
  recipient     patients? @relation("RecipientRelation", fields: [recipientId], references: [patientId])
}

model waitlist {
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt()
  deactivatedAt      DateTime?
  waitlistId         String    @id() @default(cuid())
  patientId          String
  organType          OrganType
  organSize          Int?
  organSizeThreshold Int?
  patient            patients  @relation("WaitListRelation", fields: [patientId], references: [patientId])
}
